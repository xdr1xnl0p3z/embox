package embox.compat.posix.fs

@DefaultImpl(all_old)
abstract module all {
}

module all_old extends all {
	depends file,
		chdir,
		chmod,
		dirent,
		fsop,
		getcwd,
		umask,
		xattr,
		libgen,
		chown_old
}

@DefaultImpl(file_old)
abstract module file {
}

static module file_old extends file {
	depends file_ops
	depends lseek
	depends open
}

@DefaultImpl(lseek_old)
abstract module lseek {
}

static module lseek_old extends lseek {
	source "lseek.c"

	depends embox.kernel.task.idesc
	depends embox.kernel.task.resource.errno
}

module read {
	source "read.c"
	depends embox.kernel.task.idesc
}

module write {
	source "write.c"
	depends embox.kernel.task.idesc
}

module fcntl {
	source "fcntl.c"
	depends embox.kernel.task.idesc
}

module ioctl {
	source "ioctl.c"
	depends fcntl
	depends embox.kernel.task.idesc
}

module close {
	source "close.c"
	depends embox.kernel.task.idesc
}

module fstat {
	source "fstat.c"
	depends embox.kernel.task.idesc
}

module fsync {
	source "fsync.c"
	depends embox.kernel.task.idesc
}

module creat {
	source "creat.c"
}

module readv {
	source "readv.c"
}

module writev {
	source "writev.c"
}

module file_ops {
	depends read, write, fcntl, ioctl, close
	depends fstat, fsync, readv, writev
	depends ftruncate
}

@DefaultImpl(fsop_old)
abstract module fsop {
}

static module fsop_old extends fsop {
	source "fsop.c"
	source "stat.c"

	depends embox.kernel.task.resource.errno
	depends embox.fs.core
	depends embox.fs.syslib.perm
	/* TODO tsort loop
	 * depends embox.fs.syslib.file_system_full
	 */

	depends creat
	depends umask
}

static module getcwd {
	source "getcwd.c"

	depends embox.compat.posix.util.environ
	depends embox.compat.libc.str
}

@DefaultImpl(open_old)
abstract module open {
}

static module open_old extends open {
	source "open.c"

	depends embox.kernel.task.resource.errno
	depends embox.fs.core /* if_mounted_follow_down */
	/* TODO tsort loop
	 * depends embox.fs.syslib.file_system
	 */
	depends libgen
	depends dirent
	depends umask
}

static module umask {
	source "umask.c"

	option number default_umask = 0022
	depends embox.kernel.task.task_resource
}

@DefaultImpl(xattr_old)
abstract module xattr {
}

static module xattr_old extends xattr {
	source "xattr.c"

	depends embox.fs.xattr
	depends embox.fs.syslib.perm
	depends embox.security.api
}

static module libgen {
	source "libgen.c"
}

